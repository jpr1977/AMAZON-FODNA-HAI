/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    map<TreeNode*,int> pq;
    int solve(TreeNode *root)
    {
        if(root==NULL)
            return 0;
        if(pq.count(root))
            return pq[root];
        int inc=root->val;
        if(root->left)
        {
            inc+=solve(root->left->left)+solve(root->left->right);
        }
        if(root->right)
        {
            inc+=solve(root->right->left)+solve(root->right->right);
        }
        int exc=solve(root->right)+solve(root->left);
        pq[root]=max(inc,exc);
        return pq[root];
    }
    int rob(TreeNode* root) {
        return solve(root);
    }
};
